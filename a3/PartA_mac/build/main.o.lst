   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "main.c"
  19              		.section	.text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	XMC_GPIO_SetOutputHigh:
  26              	.LFB130:
  27              		.file 2 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h"
   1:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** /**
   2:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @file xmc_gpio.h
   3:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @date 2015-06-20
   4:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
   5:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @cond
   6:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  **************************************************************************************************
   7:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
   9:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * All rights reserved.                        
  11:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *                                             
  12:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * following conditions are met:   
  14:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *                                                                              
  15:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * disclaimer.                        
  17:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * 
  18:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * 
  21:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *                                                                              
  24:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *                                                                              
  32:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  **************************************************************************************************
  35:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
  36:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Change History
  37:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * --------------
  38:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
  39:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * 2015-02-20:
  40:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *     - Initial draft<br>
  41:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *     - Documentation improved <br>
  42:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *      
  43:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * 2015-06-20:
  44:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
  46:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @endcond
  47:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
  48:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  */
  49:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
  50:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** #define XMC_GPIO_H
  52:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
  53:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** /**************************************************************************************************
  54:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * HEADER FILES
  55:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  **************************************************************************************************
  56:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
  57:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** #include "xmc_common.h"
  58:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
  59:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** /**
  60:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @{
  62:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  */
  63:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
  64:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** /**
  65:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @addtogroup GPIO
  66:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
  68:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
  72:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
  74:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Input mode features:
  75:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * \if XMC1
  78:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * \endif
  80:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
  81:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * 
  82:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Output mode features:
  83:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * \if XMC4
  85:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * \endif
  87:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
  88:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
  90:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *@{
  91:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  */
  92:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  
  93:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** /**************************************************************************************************
  94:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * MACROS
  95:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  **************************************************************************************************
  96:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
  97:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 100:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 											
 102:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 103:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****                                             
 106:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****                                             
 110:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** /**************************************************************************************************
 111:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * ENUMS
 112:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  **************************************************************************************************
 113:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 114:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 115:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** /**
 116:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  */
 118:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** {
 120:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 124:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** /**
 125:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  */
 127:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** {
 129:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 134:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** /**************************************************************************************************
 135:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  **************************************************************************************************
 137:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 138:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** #include "xmc1_gpio.h"
 140:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** #include "xmc4_gpio.h"
 142:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** #else
 143:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** #endif
 145:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 146:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** /**************************************************************************************************
 147:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * API PROTOTYPES
 148:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  **************************************************************************************************
 149:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 150:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** #ifdef __cplusplus
 151:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** extern "C" {
 152:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** #endif
 153:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 154:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 155:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** /**
 156:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 160:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @return None
 161:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 162:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * \if XMC1
 164:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * \endif
 168:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * \if XMC4
 169:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * \endif
 173:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 174:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *  None
 176:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 177:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 181:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 182:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  */
 183:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 184:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  
 185:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  
 187:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** /**
 188:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 189:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @param  pin	Port pin number.
 191:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 193:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @return None
 194:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 195:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 200:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *  None
 202:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 203:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  */
 204:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 205:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 207:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 208:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** /**
 209:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 210:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 214:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @return None
 215:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 216:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 220:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 223:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 226:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  */
 227:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 228:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 229:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** {
 231:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****   
 234:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** }
 236:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 237:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 238:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** /**
 239:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @param  pin	Port pin number.
 241:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 242:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @return None
 243:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 244:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 247:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 250:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 254:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  */
 255:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 256:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** {
  28              		.loc 2 257 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 83B0     		sub	sp, sp, #12
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
  44 0008 0B46     		mov	r3, r1
  45 000a FB70     		strb	r3, [r7, #3]
 258:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 260:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  46              		.loc 2 260 30
  47 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  48 000e 0122     		movs	r2, #1
  49 0010 9A40     		lsls	r2, r2, r3
  50              		.loc 2 260 13
  51 0012 7B68     		ldr	r3, [r7, #4]
  52 0014 5A60     		str	r2, [r3, #4]
 261:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** }
  53              		.loc 2 261 1
  54 0016 00BF     		nop
  55 0018 0C37     		adds	r7, r7, #12
  56              	.LCFI3:
  57              		.cfi_def_cfa_offset 4
  58 001a BD46     		mov	sp, r7
  59              	.LCFI4:
  60              		.cfi_def_cfa_register 13
  61              		@ sp needed
  62 001c 5DF8047B 		ldr	r7, [sp], #4
  63              	.LCFI5:
  64              		.cfi_restore 7
  65              		.cfi_def_cfa_offset 0
  66 0020 7047     		bx	lr
  67              		.cfi_endproc
  68              	.LFE130:
  70              		.section	.text.XMC_GPIO_SetOutputLow,"ax",%progbits
  71              		.align	1
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  76              	XMC_GPIO_SetOutputLow:
  77              	.LFB131:
 262:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 263:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** /**
 264:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 265:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @param  pin	port pin number.
 267:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 268:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * @return  None
 269:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 270:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 273:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 276:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  *
 280:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****  */
 281:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 282:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** {
  78              		.loc 2 283 1
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 8
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83 0000 80B4     		push	{r7}
  84              	.LCFI6:
  85              		.cfi_def_cfa_offset 4
  86              		.cfi_offset 7, -4
  87 0002 83B0     		sub	sp, sp, #12
  88              	.LCFI7:
  89              		.cfi_def_cfa_offset 16
  90 0004 00AF     		add	r7, sp, #0
  91              	.LCFI8:
  92              		.cfi_def_cfa_register 7
  93 0006 7860     		str	r0, [r7, #4]
  94 0008 0B46     		mov	r3, r1
  95 000a FB70     		strb	r3, [r7, #3]
 284:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** 
 286:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  96              		.loc 2 286 24
  97 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  98 000e 4FF48032 		mov	r2, #65536
  99 0012 9A40     		lsls	r2, r2, r3
 100              		.loc 2 286 13
 101 0014 7B68     		ldr	r3, [r7, #4]
 102 0016 5A60     		str	r2, [r3, #4]
 287:/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_gpio.h **** }
 103              		.loc 2 287 1
 104 0018 00BF     		nop
 105 001a 0C37     		adds	r7, r7, #12
 106              	.LCFI9:
 107              		.cfi_def_cfa_offset 4
 108 001c BD46     		mov	sp, r7
 109              	.LCFI10:
 110              		.cfi_def_cfa_register 13
 111              		@ sp needed
 112 001e 5DF8047B 		ldr	r7, [sp], #4
 113              	.LCFI11:
 114              		.cfi_restore 7
 115              		.cfi_def_cfa_offset 0
 116 0022 7047     		bx	lr
 117              		.cfi_endproc
 118              	.LFE131:
 120              		.global	clock_config
 121              		.section	.rodata
 122              		.align	2
 125              	clock_config:
 126 0000 50       		.byte	80
 127 0001 02       		.byte	2
 128 0002 04       		.byte	4
 129 0003 01       		.byte	1
 130 0004 0000     		.short	0
 131 0006 01       		.byte	1
 132 0007 00       		.space	1
 133 0008 00       		.byte	0
 134 0009 000000   		.space	3
 135 000c 00000100 		.word	65536
 136 0010 01       		.byte	1
 137 0011 01       		.byte	1
 138 0012 01       		.byte	1
 139 0013 01       		.byte	1
 140              		.section	.text.main,"ax",%progbits
 141              		.align	1
 142              		.global	main
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 147              	main:
 148              	.LFB203:
   1:main.c        **** 
   2:main.c        **** #include "KeyboardHID.h"
   3:main.c        **** #include "german_keyboardCodes.h"
   4:main.c        **** 
   5:main.c        **** /* Macros: */
   6:main.c        **** #define LED1 P1_1
   7:main.c        **** #define LED2 P1_0
   8:main.c        **** 
   9:main.c        **** 
  10:main.c        **** /* Clock configuration */
  11:main.c        **** XMC_SCU_CLOCK_CONFIG_t clock_config = {
  12:main.c        **** 	.syspll_config.p_div  = 2,
  13:main.c        **** 	.syspll_config.n_div  = 80,
  14:main.c        **** 	.syspll_config.k_div  = 4,
  15:main.c        **** 	.syspll_config.mode   = XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL,
  16:main.c        **** 	.syspll_config.clksrc = XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP,
  17:main.c        **** 	.enable_oschp         = true,
  18:main.c        **** 	.calibration_mode     = XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_FACTORY,
  19:main.c        **** 	.fsys_clksrc          = XMC_SCU_CLOCK_SYSCLKSRC_PLL,
  20:main.c        **** 	.fsys_clkdiv          = 1,
  21:main.c        **** 	.fcpu_clkdiv          = 1,
  22:main.c        **** 	.fccu_clkdiv          = 1,
  23:main.c        **** 	.fperipheral_clkdiv   = 1
  24:main.c        **** };
  25:main.c        **** 
  26:main.c        **** /* Forward declaration of HID callbacks as defined by LUFA */
  27:main.c        **** bool CALLBACK_HID_Device_CreateHIDReport(
  28:main.c        **** 							USB_ClassInfo_HID_Device_t* const HIDInterfaceInfo,
  29:main.c        **** 							uint8_t* const ReportID,
  30:main.c        **** 							const uint8_t ReportType,
  31:main.c        **** 							void* ReportData,
  32:main.c        **** 							uint16_t* const ReportSize );
  33:main.c        **** 
  34:main.c        **** void CALLBACK_HID_Device_ProcessHIDReport(
  35:main.c        **** 							USB_ClassInfo_HID_Device_t* const HIDInterfaceInfo,
  36:main.c        **** 							const uint8_t ReportID,
  37:main.c        **** 							const uint8_t ReportType,
  38:main.c        **** 							const void* ReportData,
  39:main.c        **** 							const uint16_t ReportSize );
  40:main.c        **** 
  41:main.c        **** void SystemCoreClockSetup(void);
  42:main.c        **** 
  43:main.c        **** /**
  44:main.c        ****  * Main program entry point. This routine configures the hardware required by
  45:main.c        ****  * the application, then enters a loop to run the application tasks in sequence.
  46:main.c        ****  */
  47:main.c        **** int main(void) {
 149              		.loc 1 47 16
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 8
 152              		@ frame_needed = 1, uses_anonymous_args = 0
 153 0000 80B5     		push	{r7, lr}
 154              	.LCFI12:
 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 7, -8
 157              		.cfi_offset 14, -4
 158 0002 82B0     		sub	sp, sp, #8
 159              	.LCFI13:
 160              		.cfi_def_cfa_offset 16
 161 0004 00AF     		add	r7, sp, #0
 162              	.LCFI14:
 163              		.cfi_def_cfa_register 7
  48:main.c        **** 	// Init LED pins for debugging and NUM/CAPS visual report
  49:main.c        **** 	XMC_GPIO_SetMode(LED1,XMC_GPIO_MODE_OUTPUT_PUSH_PULL);
 164              		.loc 1 49 2
 165 0006 8022     		movs	r2, #128
 166 0008 0121     		movs	r1, #1
 167 000a 0C48     		ldr	r0, .L7
 168 000c FFF7FEFF 		bl	XMC_GPIO_SetMode
  50:main.c        **** 	XMC_GPIO_SetMode(LED2,XMC_GPIO_MODE_OUTPUT_PUSH_PULL);
 169              		.loc 1 50 2
 170 0010 8022     		movs	r2, #128
 171 0012 0021     		movs	r1, #0
 172 0014 0948     		ldr	r0, .L7
 173 0016 FFF7FEFF 		bl	XMC_GPIO_SetMode
  51:main.c        **** 	USB_Init();
 174              		.loc 1 51 2
 175 001a FFF7FEFF 		bl	USB_Init
 176              	.LBB2:
  52:main.c        **** 
  53:main.c        **** 	// Wait until host has enumerated HID device
  54:main.c        **** 	for(int i = 0; i < 10e6; ++i)
 177              		.loc 1 54 10
 178 001e 0023     		movs	r3, #0
 179 0020 7B60     		str	r3, [r7, #4]
 180              		.loc 1 54 2
 181 0022 02E0     		b	.L4
 182              	.L5:
 183              		.loc 1 54 27 discriminator 3
 184 0024 7B68     		ldr	r3, [r7, #4]
 185 0026 0133     		adds	r3, r3, #1
 186 0028 7B60     		str	r3, [r7, #4]
 187              	.L4:
 188              		.loc 1 54 19 discriminator 1
 189 002a 7B68     		ldr	r3, [r7, #4]
 190 002c 044A     		ldr	r2, .L7+4
 191 002e 9342     		cmp	r3, r2
 192 0030 F8DB     		blt	.L5
 193              	.L6:
 194              	.LBE2:
  55:main.c        **** 		; 
  56:main.c        **** 
  57:main.c        **** 	while (1) {
  58:main.c        **** 		HID_Device_USBTask(&Keyboard_HID_Interface);
 195              		.loc 1 58 3 discriminator 1
 196 0032 0448     		ldr	r0, .L7+8
 197 0034 FFF7FEFF 		bl	HID_Device_USBTask
 198 0038 FBE7     		b	.L6
 199              	.L8:
 200 003a 00BF     		.align	2
 201              	.L7:
 202 003c 00810248 		.word	1208123648
 203 0040 80969800 		.word	10000000
 204 0044 00000000 		.word	Keyboard_HID_Interface
 205              		.cfi_endproc
 206              	.LFE203:
 208              		.section	.text.CALLBACK_HID_Device_CreateHIDReport,"ax",%progbits
 209              		.align	1
 210              		.global	CALLBACK_HID_Device_CreateHIDReport
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 215              	CALLBACK_HID_Device_CreateHIDReport:
 216              	.LFB204:
  59:main.c        **** 	}
  60:main.c        **** }
  61:main.c        **** 
  62:main.c        **** // Callback function called when a new HID report needs to be created
  63:main.c        **** bool CALLBACK_HID_Device_CreateHIDReport(
  64:main.c        **** 							USB_ClassInfo_HID_Device_t* const HIDInterfaceInfo,
  65:main.c        **** 							uint8_t* const ReportID,
  66:main.c        **** 							const uint8_t ReportType,
  67:main.c        **** 							void* ReportData,
  68:main.c        **** 							uint16_t* const ReportSize ) {
 217              		.loc 1 68 37
 218              		.cfi_startproc
 219              		@ args = 4, pretend = 0, frame = 24
 220              		@ frame_needed = 1, uses_anonymous_args = 0
 221              		@ link register save eliminated.
 222 0000 80B4     		push	{r7}
 223              	.LCFI15:
 224              		.cfi_def_cfa_offset 4
 225              		.cfi_offset 7, -4
 226 0002 87B0     		sub	sp, sp, #28
 227              	.LCFI16:
 228              		.cfi_def_cfa_offset 32
 229 0004 00AF     		add	r7, sp, #0
 230              	.LCFI17:
 231              		.cfi_def_cfa_register 7
 232 0006 F860     		str	r0, [r7, #12]
 233 0008 B960     		str	r1, [r7, #8]
 234 000a 3B60     		str	r3, [r7]
 235 000c 1346     		mov	r3, r2
 236 000e FB71     		strb	r3, [r7, #7]
  69:main.c        **** 	USB_KeyboardReport_Data_t* report = (USB_KeyboardReport_Data_t *)ReportData;
 237              		.loc 1 69 29
 238 0010 3B68     		ldr	r3, [r7]
 239 0012 7B61     		str	r3, [r7, #20]
  70:main.c        **** 	*ReportSize = sizeof(USB_KeyboardReport_Data_t);
 240              		.loc 1 70 14
 241 0014 3B6A     		ldr	r3, [r7, #32]
 242 0016 0822     		movs	r2, #8
 243 0018 1A80     		strh	r2, [r3]	@ movhi
  71:main.c        **** 	static uint8_t characterSent = 0, 
  72:main.c        **** 				   indexToSend = 0;
  73:main.c        **** 
  74:main.c        **** 	// string to be sent
  75:main.c        **** 	static uint8_t stringToSend[12] = {
  76:main.c        **** 		GERMAN_KEYBOARD_SC_H, 
  77:main.c        **** 		GERMAN_KEYBOARD_SC_E, 
  78:main.c        **** 		GERMAN_KEYBOARD_SC_L, 
  79:main.c        **** 		GERMAN_KEYBOARD_SC_L, 
  80:main.c        **** 		GERMAN_KEYBOARD_SC_O, 
  81:main.c        **** 		GERMAN_KEYBOARD_SC_SPACE, 
  82:main.c        **** 		GERMAN_KEYBOARD_SC_W, 
  83:main.c        **** 		GERMAN_KEYBOARD_SC_O, 
  84:main.c        **** 		GERMAN_KEYBOARD_SC_R, 
  85:main.c        **** 		GERMAN_KEYBOARD_SC_L, 
  86:main.c        **** 		GERMAN_KEYBOARD_SC_D, 
  87:main.c        **** 		GERMAN_KEYBOARD_SC_ENTER
  88:main.c        **** 	};
  89:main.c        **** 
  90:main.c        **** 	if(indexToSend < 12) {
 244              		.loc 1 90 17
 245 001a 194B     		ldr	r3, .L13
 246 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 247              		.loc 1 90 4
 248 001e 0B2B     		cmp	r3, #11
 249 0020 26D8     		bhi	.L10
  91:main.c        **** 		if(characterSent) {
 250              		.loc 1 91 6
 251 0022 184B     		ldr	r3, .L13+4
 252 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 253              		.loc 1 91 5
 254 0026 002B     		cmp	r3, #0
 255 0028 12D0     		beq	.L11
  92:main.c        **** 			report->Modifier = 0; 
 256              		.loc 1 92 21
 257 002a 7B69     		ldr	r3, [r7, #20]
 258 002c 0022     		movs	r2, #0
 259 002e 1A70     		strb	r2, [r3]
  93:main.c        **** 			report->Reserved = 0; 
 260              		.loc 1 93 21
 261 0030 7B69     		ldr	r3, [r7, #20]
 262 0032 0022     		movs	r2, #0
 263 0034 5A70     		strb	r2, [r3, #1]
  94:main.c        **** 			report->KeyCode[0] = 0; 
 264              		.loc 1 94 23
 265 0036 7B69     		ldr	r3, [r7, #20]
 266 0038 0022     		movs	r2, #0
 267 003a 9A70     		strb	r2, [r3, #2]
  95:main.c        **** 			characterSent = 0;
 268              		.loc 1 95 18
 269 003c 114B     		ldr	r3, .L13+4
 270 003e 0022     		movs	r2, #0
 271 0040 1A70     		strb	r2, [r3]
  96:main.c        **** 			++indexToSend; 
 272              		.loc 1 96 4
 273 0042 0F4B     		ldr	r3, .L13
 274 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 275 0046 0133     		adds	r3, r3, #1
 276 0048 DAB2     		uxtb	r2, r3
 277 004a 0D4B     		ldr	r3, .L13
 278 004c 1A70     		strb	r2, [r3]
 279 004e 0FE0     		b	.L10
 280              	.L11:
  97:main.c        **** 		} else {
  98:main.c        **** 			report->Modifier = 0; 
 281              		.loc 1 98 21
 282 0050 7B69     		ldr	r3, [r7, #20]
 283 0052 0022     		movs	r2, #0
 284 0054 1A70     		strb	r2, [r3]
  99:main.c        **** 			report->Reserved = 0; 
 285              		.loc 1 99 21
 286 0056 7B69     		ldr	r3, [r7, #20]
 287 0058 0022     		movs	r2, #0
 288 005a 5A70     		strb	r2, [r3, #1]
 100:main.c        **** 			report->KeyCode[0] = stringToSend[indexToSend]; 
 289              		.loc 1 100 37
 290 005c 084B     		ldr	r3, .L13
 291 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 292 0060 1A46     		mov	r2, r3
 293 0062 094B     		ldr	r3, .L13+8
 294 0064 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 295              		.loc 1 100 23
 296 0066 7B69     		ldr	r3, [r7, #20]
 297 0068 9A70     		strb	r2, [r3, #2]
 101:main.c        **** 			characterSent = 1;
 298              		.loc 1 101 18
 299 006a 064B     		ldr	r3, .L13+4
 300 006c 0122     		movs	r2, #1
 301 006e 1A70     		strb	r2, [r3]
 302              	.L10:
 102:main.c        **** 		}
 103:main.c        **** 	}
 104:main.c        **** 
 105:main.c        **** 	return true;
 303              		.loc 1 105 9
 304 0070 0123     		movs	r3, #1
 106:main.c        **** }
 305              		.loc 1 106 1
 306 0072 1846     		mov	r0, r3
 307 0074 1C37     		adds	r7, r7, #28
 308              	.LCFI18:
 309              		.cfi_def_cfa_offset 4
 310 0076 BD46     		mov	sp, r7
 311              	.LCFI19:
 312              		.cfi_def_cfa_register 13
 313              		@ sp needed
 314 0078 5DF8047B 		ldr	r7, [sp], #4
 315              	.LCFI20:
 316              		.cfi_restore 7
 317              		.cfi_def_cfa_offset 0
 318 007c 7047     		bx	lr
 319              	.L14:
 320 007e 00BF     		.align	2
 321              	.L13:
 322 0080 00000000 		.word	indexToSend.2
 323 0084 01000000 		.word	characterSent.1
 324 0088 00000000 		.word	stringToSend.0
 325              		.cfi_endproc
 326              	.LFE204:
 328              		.section	.text.CALLBACK_HID_Device_ProcessHIDReport,"ax",%progbits
 329              		.align	1
 330              		.global	CALLBACK_HID_Device_ProcessHIDReport
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 335              	CALLBACK_HID_Device_ProcessHIDReport:
 336              	.LFB205:
 107:main.c        **** 
 108:main.c        **** // Called on report input. For keyboard HID devices, that's the state of the LEDs
 109:main.c        **** void CALLBACK_HID_Device_ProcessHIDReport(
 110:main.c        **** 						USB_ClassInfo_HID_Device_t* const HIDInterfaceInfo,
 111:main.c        **** 						const uint8_t ReportID,
 112:main.c        **** 						const uint8_t ReportType,
 113:main.c        **** 						const void* ReportData,
 114:main.c        **** 						const uint16_t ReportSize ) {
 337              		.loc 1 114 35
 338              		.cfi_startproc
 339              		@ args = 4, pretend = 0, frame = 24
 340              		@ frame_needed = 1, uses_anonymous_args = 0
 341 0000 80B5     		push	{r7, lr}
 342              	.LCFI21:
 343              		.cfi_def_cfa_offset 8
 344              		.cfi_offset 7, -8
 345              		.cfi_offset 14, -4
 346 0002 86B0     		sub	sp, sp, #24
 347              	.LCFI22:
 348              		.cfi_def_cfa_offset 32
 349 0004 00AF     		add	r7, sp, #0
 350              	.LCFI23:
 351              		.cfi_def_cfa_register 7
 352 0006 F860     		str	r0, [r7, #12]
 353 0008 7B60     		str	r3, [r7, #4]
 354 000a 0B46     		mov	r3, r1
 355 000c FB72     		strb	r3, [r7, #11]
 356 000e 1346     		mov	r3, r2
 357 0010 BB72     		strb	r3, [r7, #10]
 115:main.c        **** 	uint8_t *report = (uint8_t*)ReportData;
 358              		.loc 1 115 11
 359 0012 7B68     		ldr	r3, [r7, #4]
 360 0014 7B61     		str	r3, [r7, #20]
 116:main.c        **** 
 117:main.c        **** 	if(*report & HID_KEYBOARD_LED_NUMLOCK) 
 361              		.loc 1 117 5
 362 0016 7B69     		ldr	r3, [r7, #20]
 363 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 364              		.loc 1 117 13
 365 001a 03F00103 		and	r3, r3, #1
 366              		.loc 1 117 4
 367 001e 002B     		cmp	r3, #0
 368 0020 04D0     		beq	.L16
 118:main.c        **** 		XMC_GPIO_SetOutputHigh(LED1);
 369              		.loc 1 118 3
 370 0022 0121     		movs	r1, #1
 371 0024 0D48     		ldr	r0, .L21
 372 0026 FFF7FEFF 		bl	XMC_GPIO_SetOutputHigh
 373 002a 03E0     		b	.L17
 374              	.L16:
 119:main.c        **** 	else 
 120:main.c        **** 		XMC_GPIO_SetOutputLow(LED1);
 375              		.loc 1 120 3
 376 002c 0121     		movs	r1, #1
 377 002e 0B48     		ldr	r0, .L21
 378 0030 FFF7FEFF 		bl	XMC_GPIO_SetOutputLow
 379              	.L17:
 121:main.c        **** 
 122:main.c        **** 	if(*report & HID_KEYBOARD_LED_CAPSLOCK) 
 380              		.loc 1 122 5
 381 0034 7B69     		ldr	r3, [r7, #20]
 382 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 383              		.loc 1 122 13
 384 0038 03F00203 		and	r3, r3, #2
 385              		.loc 1 122 4
 386 003c 002B     		cmp	r3, #0
 387 003e 04D0     		beq	.L18
 123:main.c        **** 		XMC_GPIO_SetOutputHigh(LED2);
 388              		.loc 1 123 3
 389 0040 0021     		movs	r1, #0
 390 0042 0648     		ldr	r0, .L21
 391 0044 FFF7FEFF 		bl	XMC_GPIO_SetOutputHigh
 124:main.c        **** 	else 
 125:main.c        **** 		XMC_GPIO_SetOutputLow(LED2);
 126:main.c        **** }
 392              		.loc 1 126 1
 393 0048 03E0     		b	.L20
 394              	.L18:
 125:main.c        **** }
 395              		.loc 1 125 3
 396 004a 0021     		movs	r1, #0
 397 004c 0348     		ldr	r0, .L21
 398 004e FFF7FEFF 		bl	XMC_GPIO_SetOutputLow
 399              	.L20:
 400              		.loc 1 126 1
 401 0052 00BF     		nop
 402 0054 1837     		adds	r7, r7, #24
 403              	.LCFI24:
 404              		.cfi_def_cfa_offset 8
 405 0056 BD46     		mov	sp, r7
 406              	.LCFI25:
 407              		.cfi_def_cfa_register 13
 408              		@ sp needed
 409 0058 80BD     		pop	{r7, pc}
 410              	.L22:
 411 005a 00BF     		.align	2
 412              	.L21:
 413 005c 00810248 		.word	1208123648
 414              		.cfi_endproc
 415              	.LFE205:
 417              		.section	.text.SystemCoreClockSetup,"ax",%progbits
 418              		.align	1
 419              		.global	SystemCoreClockSetup
 420              		.syntax unified
 421              		.thumb
 422              		.thumb_func
 424              	SystemCoreClockSetup:
 425              	.LFB206:
 127:main.c        **** 
 128:main.c        **** void SystemCoreClockSetup(void) {
 426              		.loc 1 128 33
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 0
 429              		@ frame_needed = 1, uses_anonymous_args = 0
 430 0000 80B5     		push	{r7, lr}
 431              	.LCFI26:
 432              		.cfi_def_cfa_offset 8
 433              		.cfi_offset 7, -8
 434              		.cfi_offset 14, -4
 435 0002 00AF     		add	r7, sp, #0
 436              	.LCFI27:
 437              		.cfi_def_cfa_register 7
 129:main.c        **** 	/* Setup settings for USB clock */
 130:main.c        **** 	XMC_SCU_CLOCK_Init(&clock_config);
 438              		.loc 1 130 2
 439 0004 0A48     		ldr	r0, .L24
 440 0006 FFF7FEFF 		bl	XMC_SCU_CLOCK_Init
 131:main.c        **** 
 132:main.c        **** 	XMC_SCU_CLOCK_EnableUsbPll();
 441              		.loc 1 132 2
 442 000a FFF7FEFF 		bl	XMC_SCU_CLOCK_EnableUsbPll
 133:main.c        **** 	XMC_SCU_CLOCK_StartUsbPll(2, 64);
 443              		.loc 1 133 2
 444 000e 4021     		movs	r1, #64
 445 0010 0220     		movs	r0, #2
 446 0012 FFF7FEFF 		bl	XMC_SCU_CLOCK_StartUsbPll
 134:main.c        **** 	XMC_SCU_CLOCK_SetUsbClockDivider(4);
 447              		.loc 1 134 2
 448 0016 0420     		movs	r0, #4
 449 0018 FFF7FEFF 		bl	XMC_SCU_CLOCK_SetUsbClockDivider
 135:main.c        **** 	XMC_SCU_CLOCK_SetUsbClockSource(XMC_SCU_CLOCK_USBCLKSRC_USBPLL);
 450              		.loc 1 135 2
 451 001c 0020     		movs	r0, #0
 452 001e FFF7FEFF 		bl	XMC_SCU_CLOCK_SetUsbClockSource
 136:main.c        **** 	XMC_SCU_CLOCK_EnableClock(XMC_SCU_CLOCK_USB);
 453              		.loc 1 136 2
 454 0022 0120     		movs	r0, #1
 455 0024 FFF7FEFF 		bl	XMC_SCU_CLOCK_EnableClock
 137:main.c        **** 
 138:main.c        **** 	SystemCoreClockUpdate();
 456              		.loc 1 138 2
 457 0028 FFF7FEFF 		bl	SystemCoreClockUpdate
 139:main.c        **** }...
 458              		.loc 1 139 1
 459 002c 00BF     		nop
 460 002e 80BD     		pop	{r7, pc}
 461              	.L25:
 462              		.align	2
 463              	.L24:
 464 0030 00000000 		.word	clock_config
 465              		.cfi_endproc
 466              	.LFE206:
 468              		.bss
 469              	indexToSend.2:
 470 0000 00       		.space	1
 472              	characterSent.1:
 473 0001 00       		.space	1
 475              		.data
 476              		.align	2
 479              	stringToSend.0:
 480 0000 0B080F0F 		.ascii	"\013\010\017\017\022,\032\022\025\017\007("
 480      122C1A12 
 480      150F0728 
 481              		.text
 482              	.Letext0:
 483              		.file 3 "/Applications/ArmGNUToolchain/14.2.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 484              		.file 4 "/Applications/ArmGNUToolchain/14.2.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 485              		.file 5 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc4_gpio.h"
 486              		.file 6 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc4_scu.h"
 487              		.file 7 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/ThirdPartyLibraries/USBlib/USB/Core/XMC4000/..
 488              		.file 8 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/ThirdPartyLibraries/USBlib/USB/Class/Device/..
 489              		.file 9 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/ThirdPartyLibraries/USBlib/USB/Class/Device/HI
 490              		.file 10 "KeyboardHID.h"
 491              		.file 11 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/CMSIS/Infineon/XMC4500_series/Include/system_
 492              		.file 12 "/opt/XMClib/XMC_Peripheral_Library_v2.1.16/XMCLib/inc/xmc_scu.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/2l/6fxgnc996gd1v1jf5fy_8j5r0000gn/T//ccrsu50d.s:20     .text.XMC_GPIO_SetOutputHigh:00000000 $t
/var/folders/2l/6fxgnc996gd1v1jf5fy_8j5r0000gn/T//ccrsu50d.s:25     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
/var/folders/2l/6fxgnc996gd1v1jf5fy_8j5r0000gn/T//ccrsu50d.s:71     .text.XMC_GPIO_SetOutputLow:00000000 $t
/var/folders/2l/6fxgnc996gd1v1jf5fy_8j5r0000gn/T//ccrsu50d.s:76     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
/var/folders/2l/6fxgnc996gd1v1jf5fy_8j5r0000gn/T//ccrsu50d.s:125    .rodata:00000000 clock_config
/var/folders/2l/6fxgnc996gd1v1jf5fy_8j5r0000gn/T//ccrsu50d.s:122    .rodata:00000000 $d
/var/folders/2l/6fxgnc996gd1v1jf5fy_8j5r0000gn/T//ccrsu50d.s:141    .text.main:00000000 $t
/var/folders/2l/6fxgnc996gd1v1jf5fy_8j5r0000gn/T//ccrsu50d.s:147    .text.main:00000000 main
/var/folders/2l/6fxgnc996gd1v1jf5fy_8j5r0000gn/T//ccrsu50d.s:202    .text.main:0000003c $d
/var/folders/2l/6fxgnc996gd1v1jf5fy_8j5r0000gn/T//ccrsu50d.s:209    .text.CALLBACK_HID_Device_CreateHIDReport:00000000 $t
/var/folders/2l/6fxgnc996gd1v1jf5fy_8j5r0000gn/T//ccrsu50d.s:215    .text.CALLBACK_HID_Device_CreateHIDReport:00000000 CALLBACK_HID_Device_CreateHIDReport
/var/folders/2l/6fxgnc996gd1v1jf5fy_8j5r0000gn/T//ccrsu50d.s:322    .text.CALLBACK_HID_Device_CreateHIDReport:00000080 $d
/var/folders/2l/6fxgnc996gd1v1jf5fy_8j5r0000gn/T//ccrsu50d.s:469    .bss:00000000 indexToSend.2
/var/folders/2l/6fxgnc996gd1v1jf5fy_8j5r0000gn/T//ccrsu50d.s:472    .bss:00000001 characterSent.1
/var/folders/2l/6fxgnc996gd1v1jf5fy_8j5r0000gn/T//ccrsu50d.s:479    .data:00000000 stringToSend.0
/var/folders/2l/6fxgnc996gd1v1jf5fy_8j5r0000gn/T//ccrsu50d.s:329    .text.CALLBACK_HID_Device_ProcessHIDReport:00000000 $t
/var/folders/2l/6fxgnc996gd1v1jf5fy_8j5r0000gn/T//ccrsu50d.s:335    .text.CALLBACK_HID_Device_ProcessHIDReport:00000000 CALLBACK_HID_Device_ProcessHIDReport
/var/folders/2l/6fxgnc996gd1v1jf5fy_8j5r0000gn/T//ccrsu50d.s:413    .text.CALLBACK_HID_Device_ProcessHIDReport:0000005c $d
/var/folders/2l/6fxgnc996gd1v1jf5fy_8j5r0000gn/T//ccrsu50d.s:418    .text.SystemCoreClockSetup:00000000 $t
/var/folders/2l/6fxgnc996gd1v1jf5fy_8j5r0000gn/T//ccrsu50d.s:424    .text.SystemCoreClockSetup:00000000 SystemCoreClockSetup
/var/folders/2l/6fxgnc996gd1v1jf5fy_8j5r0000gn/T//ccrsu50d.s:464    .text.SystemCoreClockSetup:00000030 $d
/var/folders/2l/6fxgnc996gd1v1jf5fy_8j5r0000gn/T//ccrsu50d.s:470    .bss:00000000 $d
/var/folders/2l/6fxgnc996gd1v1jf5fy_8j5r0000gn/T//ccrsu50d.s:476    .data:00000000 $d
                           .group:00000000 wm4.0.241ce140b5afdc8837fba2b44cc07f6b
                           .group:00000000 wm4._newlib_version.h.4.411db44ea2338a62eca2f0777f81481b
                           .group:00000000 wm4.newlib.h.27.4b972ceed5d01f491020c20f1e546cab
                           .group:00000000 wm4.ieeefp.h.77.61a77db5804869b1dadd307a77cf78c9
                           .group:00000000 wm4.features.h.22.03467e2205ec9ffbc20524d97cdbdf6a
                           .group:00000000 wm4.config.h.224.10ee1ad185d877c6e334e6581faab44d
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stddef.h.39.38eb7ec030421799c657b13be5aa21c7
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.cdefs.h.49.bafb023044e47a1dcdd854e4d6521f7d
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.158.6f8e08a347b1cff664332fa350bfceb3
                           .group:00000000 wm4._types.h.127.3bdfe3ff8ea2d0985b03d9cbe93480e3
                           .group:00000000 wm4.reent.h.18.25503cdc8b7e55dd0d6ea7b3e5af7a03
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.78.6b87466b04591b1f1cb88c14fdf2ba9e
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.eec8bf00b5213f43d095cb984c5f22e3
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.stdbool.h.29.c08aa3eec75cf5b9b5003883f43253f0
                           .group:00000000 wm4.xmc_device.h.61.ba2d082e12f51240746cffdd60d42b81
                           .group:00000000 wm4.XMC4500.h.55.9aa45b9b5790506b2dcb963e4e7adeaf
                           .group:00000000 wm4.core_cm4.h.32.6c6eb1c8daeca23ce7ba79c8e8120d52
                           .group:00000000 wm4.cmsis_gcc.h.26.91b63349961c35637933e4fba51b867b
                           .group:00000000 wm4.core_cm4.h.172.fdd5a388a160bb6ff767b7d7ee212268
                           .group:00000000 wm4.system_XMC4500.h.42.99124977c10ca8844a71949adbeabd70
                           .group:00000000 wm4.XMC4500.h.208.b340195df97f067735c4c769ba59985a
                           .group:00000000 wm4.xmc_device.h.1460.8860499b404961ffcfbb8d1fefcb2146
                           .group:00000000 wm4.xmc_common.h.92.3f4336a80569affab05a81145b87c2fc
                           .group:00000000 wm4.xmc_gpio.h.97.fa6a2e1be6030a75d960293cc3bbbd6b
                           .group:00000000 wm4.xmc4_gpio_map.h.74.66e9110cf801b78826ef5354da51c32f
                           .group:00000000 wm4.xmc4_gpio.h.79.ce6c49508b5a7769c66e7e3c21dcdfe4
                           .group:00000000 wm4.USB.h.376.cfdb9ecb25c70fec676f585dede264a7
                           .group:00000000 wm4.Common.h.60.c2f00e237f5994003db83c2422602b22
                           .group:00000000 wm4.BoardTypes.h.52.ca64813ccee737bcc2115eab5e075fdb
                           .group:00000000 wm4.CompilerSpecific.h.55.4a5e5ff77cd35e49c89cf2115251aee0
                           .group:00000000 wm4.Attributes.h.56.73b3ee26b0836c2dec569a5fa6f1b355
                           .group:00000000 wm4.Endianness.h.57.3ac00c5468f4b91b806a0e6dba047e9c
                           .group:00000000 wm4.Common.h.105.4b937a9cc9dcdb26c3f07541b0b763a8
                           .group:00000000 wm4.USBController.h.49.cbfc73805155b6fff6267400af3f4eec
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:00000000 wm4.xmc_usbd_regs.h.80.57c6c85fa0ecbc9f8327ce445aebb9bc
                           .group:00000000 wm4.xmc4_scu.h.83.0449f5880ac071460ec1a8072311ea51
                           .group:00000000 wm4.xmc_usbd.h.122.ce57a9e6a9da48ee33ece02813c49593
                           .group:00000000 wm4.USBController_XMC4000.h.71.902f2653e09cb8b25245faa82cc6b907
                           .group:00000000 wm4.StdDescriptors.h.73.7d17e8be7a73b855fc0f8827303b7597
                           .group:00000000 wm4.Endpoint.h.73.3734de3e84ab23fb43d81f41fba620ec
                           .group:00000000 wm4.Device_XMC4000.h.86.6803bdd99d84e764a570256c87a24d0a
                           .group:00000000 wm4.StdRequestType.h.50.461dce94a3ee1fa9ff31ec5f28bd9699
                           .group:00000000 wm4.ConfigDescriptors.h.51.0d67ebf453774188abf5a503ba8f6735
                           .group:00000000 wm4.CDCClass.h.61.0d41ba255f7ce6f076fd610d8396dd1f
                           .group:00000000 wm4.CDCClassCommon.h.72.14ca578d8547e19a8a0c0d2d328483bd
                           .group:00000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.stdio.h.47.dc31ec4674d7bcb103c9f08809549f45
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.87.a1e20d2651f9bfb66e51bfbe849db00a
                           .group:00000000 wm4.HIDClass.h.62.6bb32c59177b21a83b8e65c5a1b0a615
                           .group:00000000 wm4.HIDReportData.h.47.f13f4956396e0bec70835fe634fcc24d
                           .group:00000000 wm4.HIDParser.h.88.4b86fe94cb8d01713592cdd0391b606b
                           .group:00000000 wm4.HIDClassCommon.h.71.a60cdf9d7cd69289f43dde215b509193
                           .group:00000000 wm4.MassStorageClass.h.61.e9235f3bd090b77f36343f082ef93107
                           .group:00000000 wm4.MassStorageClassCommon.h.51.6aefecf288eb3c3c6c9bde61e26dd765
                           .group:00000000 wm4.Descriptors.h.37.a9c2e3eb1c5646a4a3911d89f91c5fab
                           .group:00000000 wm4.german_keyboardCodes.h.2.e1b4448076427773e95ef41c8020de97

UNDEFINED SYMBOLS
XMC_GPIO_SetMode
USB_Init
HID_Device_USBTask
Keyboard_HID_Interface
XMC_SCU_CLOCK_Init
XMC_SCU_CLOCK_EnableUsbPll
XMC_SCU_CLOCK_StartUsbPll
XMC_SCU_CLOCK_SetUsbClockDivider
XMC_SCU_CLOCK_SetUsbClockSource
XMC_SCU_CLOCK_EnableClock
SystemCoreClockUpdate
